let express,bodyParser,cors,http,logger;_64c‍.x([["app",()=>app],["default",()=>_64c‍.o]]);_64c‍.w("express",[["default",["express"],function(v){express=v}]]);_64c‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_64c‍.w("cors",[["*",null,function(v){cors=v}]]);_64c‍.w("http",[["default",["http"],function(v){http=v}]]);_64c‍.w("morgan",[["default",["logger"],function(v){logger=v}]]);





       const app = express();

class YelpReview{
    constructor(){
        this.setup();
        // this.loadRoutes();
    }

    setup(){
        app.use(cors());
        app.options('*', cors());
        app.use(logger('dev'));
        app.use(bodyParser.json());
        app.use(
            bodyParser.urlencoded({
                extended: true,
            })
        );
    }

    listen(port){
        // use env port or specified port
        let configPort = process.env.PORT || port;  
        
        //create our server and listen on configPort
        http.createServer(app).listen(configPort, () => {
            console.log('Listening on port ${configPort}');
        });
    }
}

_64c‍.d(YelpReview);